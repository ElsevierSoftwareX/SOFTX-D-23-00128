head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	99.02.18.22.26.25;	author vkapur;	state Exp;
branches;
next	1.2;

1.2
date	98.07.17.08.06.23;	author krishna;	state Exp;
branches;
next	1.1;

1.1
date	98.02.03.00.45.52;	author krishna;	state Exp;
branches;
next	;


desc
@@


1.3
log
@none
@
text
@/* $Log: xklsyn.h,v $
 * Revision 1.2  1998/07/17 08:06:23  krishna
 * Added RCS header.
 * */

#ifndef XKLSYN_H
#define XKLSYN_H

/****************************    xklsyn.h  ****************************/

#include "xinfo.h"


#define NPAR             61
#define MAX_VAR_PARS     60
#define LOC_F0INTERP	 48
#define MAX_FRAMES      400
#define FIXED           'C'
#define VARIABLE        'v'
#define VARRIED         'V'
/*#define TRUE            't' need to change this */
#define GRID_ON		3
#define GRID_OFF	2
#define ERASE_PAR	1
#define OVERLAY_PAR	0


typedef struct SYN {
        char wavename[200]; /* the base name used for default
                           name of output files*/

        char param[5];
        char request;
	char command;
        short *iwave;

	int warningsw,nc,samrat,nsperframe;
	int ms25,dispt;

        char ipsw;      /* TRUE if default pars inserted in par tracks */
        int np;         /* Current parameter */
        int nf;         /* Current time frame */
        int val;        /* Current value of current par for cur frame */

/*    Configuration definition Arrays */
/*              First entry in config must be desired utterance dur in ms */
/*              Second entry must be the desired number of ms per frame */
/*              (from these numbers are computed NSAMP_PER_FRAME & nframes) */
        int npars;              /* Number of parameters in config definition */
	int totdur;		/* Utterance duration in msec */
	int ms_frame;		/* Number of msec in a frame */
        int nframes;            /* # frames (Dur in ms divided by framedur */
        int nvar;               /* Number of variable parameters in config */
        char symb[NPAR][4];     /* 2 or 3 char symbol for parameter */
        char cv[NPAR];  	/* Constant/variable switch for each param */
        int maxval[NPAR];       /* Maximum values for all parameters */
        int minval[NPAR];       /* Minimum values for all parameters */
        int defval[NPAR];       /* Default values for all parameters */
	char definition[NPAR][51];	/* Text definition of each parameter */

        int pars[NPAR];	  /* Whenever NPAR changed, change code below */
			  /*  that sets f0next, and change all of the */
			  /*  pars[xx] = statements in PARWAVEF.C     */

/*    Speaker Definition	    0  1  2  3  4  5  6  7  8  9 10 11 */
        int spkrdef[12];	/* du ui sr nf ss rs sb cp os gv gh gf */
/*				     (ui is in samples) */


	int forfreq[10],nforfreq;	/* Formant freq estimates */
	int time_in_ms; 	/* Time in msec corresp. to cursor position */

	char *when;
	long tvec;

	int ngrids,tgridmax,timetrunc;
/*	char symdigit[5] = {'1', '2', '3', '4', '5' }; */
	int batchjob;		/* Set to 1 if a batch job */

        INFO     *info[2]; /*info[0,1] klsyn graphs
                            easy access to drawing information*/       

      }  SYN;

#endif /*XKLSYN_H*/

@


1.2
log
@Added RCS header.
@
text
@d1 4
a4 1
/* $Log$ */
@


1.1
log
@Initial revision
@
text
@d1 2
@
